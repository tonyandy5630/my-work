{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyWork\\\\ReactJS Learn\\\\Part10-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    console.log(action.val.includes(\"@\"));\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PASS_INPUT\") {\n    console.log(\"USER_PASS_INPUT\");\n    console.log(\"password: \" + action.value);\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_PASS_BLUR\") {\n    console.log(\"INPUT_PASS_BLUR\");\n    console.log(\"password: \" + state.value.trim().length > 0);\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  });\n  useEffect(() => {\n    const identify = setTimeout(() => {\n      console.log(\"checking\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500); //? except first time, it will clean up\n\n    return () => {\n      console.log(\"Im cleaning\");\n      clearTimeout(identify);\n    };\n  }, [emailState.value, passwordState.value]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_PASS_INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_PASS_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"baTGyPovelW7pV+e1OJJxyTpzdM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","console","log","val","includes","value","isValid","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","identify","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["D:/MyWork/ReactJS Learn/Part10-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    console.log(action.val.includes(\"@\"));\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PASS_INPUT\") {\n    console.log(\"USER_PASS_INPUT\");\n    console.log(\"password: \" + action.value);\n    return { value: action.value, isValid: action.value.trim().length > 6 };\n  }\n\n  if (action.type === \"INPUT_PASS_BLUR\") {\n    console.log(\"INPUT_PASS_BLUR\");\n    console.log(\"password: \" + state.value.trim().length > 0);\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  useEffect(() => {\n    const identify = setTimeout(() => {\n      console.log(\"checking\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    //? except first time, it will clean up\n    return () => {\n      console.log(\"Im cleaning\");\n      clearTimeout(identify);\n    };\n  }, [emailState.value, passwordState.value]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_PASS_INPUT\", value: event.target.value });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_PASS_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor='email'>E-Mail</label>\n          <input\n            type='email'\n            id='email'\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            id='password'\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type='submit' className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}