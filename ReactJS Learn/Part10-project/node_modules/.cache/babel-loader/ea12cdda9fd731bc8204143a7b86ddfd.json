{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyWork\\\\ReactJS Learn\\\\Part10-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    // console.log(action.val.includes(\"@\"));\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PASS_INPUT\") {\n    console.log(action);\n    console.log(\"USER_PASS_INPUT\");\n    return {\n      value: action.value,\n      isValid: action.value.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_PASS_BLUR\") {\n    console.log(\"INPUT_PASS_BLUR\");\n    console.log(state);\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const authCtx = useContext(AuthContext);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  });\n  useEffect(() => {\n    const identify = setTimeout(() => {\n      console.log(\"checking\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500); //? except first time, it will clean up\n\n    return () => {\n      console.log(\"Im cleaning\");\n      clearTimeout(identify);\n    };\n  }, [emailState.value, passwordState.value]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_PASS_INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_PASS_BLUR\"\n    });\n  };\n\n  let passwordRef = useRef();\n  let emailRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailState.isValid) {\n      emailRef.current.focus();\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordRef,\n        inputType: {\n          type: \"email\",\n          id: \"email\"\n        },\n        value: emailState.value,\n        state: emailState.isValid,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        inputType: {\n          type: \"password\",\n          id: \"password\"\n        },\n        value: passwordState.value,\n        state: passwordState.isValid,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Ag9nO3WY1b3PPGhhXv/zUoqEXgk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","AuthContext","classes","Button","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","console","log","trim","length","Login","props","authCtx","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","identify","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","passwordRef","emailRef","submitHandler","preventDefault","onLogin","current","focus","login","id","actions","btn"],"sources":["D:/MyWork/ReactJS Learn/Part10-project/src/components/Login/Login.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    // console.log(action.val.includes(\"@\"));\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PASS_INPUT\") {\n    console.log(action);\n    console.log(\"USER_PASS_INPUT\");\n    return { value: action.value, isValid: action.value.trim().length > 6 };\n  }\n\n  if (action.type === \"INPUT_PASS_BLUR\") {\n    console.log(\"INPUT_PASS_BLUR\");\n    console.log(state);\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const authCtx = useContext(AuthContext);\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  useEffect(() => {\n    const identify = setTimeout(() => {\n      console.log(\"checking\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    //? except first time, it will clean up\n    return () => {\n      console.log(\"Im cleaning\");\n      clearTimeout(identify);\n    };\n  }, [emailState.value, passwordState.value]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_PASS_INPUT\", value: event.target.value });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_PASS_BLUR\" });\n  };\n\n  let passwordRef = useRef();\n  let emailRef = useRef();\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailState.isValid) {\n      emailRef.current.focus();\n    } else {\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          ref={passwordRef}\n          inputType={{ type: \"email\", id: \"email\" }}\n          value={emailState.value}\n          state={emailState.isValid}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          inputType={{ type: \"password\", id: \"password\" }}\n          value={passwordState.value}\n          state={passwordState.isValid}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        {/* <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor='email'>E-Mail</label>\n          <input\n            type='email'\n            id='email'\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div> */}\n        {/* <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            id='password'\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div> */}\n        <div className={classes.actions}>\n          <Button type='submit' className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}